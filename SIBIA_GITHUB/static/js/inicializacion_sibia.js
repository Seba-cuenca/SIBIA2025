// SCRIPT DE INICIALIZACI√ìN SIBIA
console.log("üöÄ === INICIALIZANDO SIBIA ===");

// Esperar a que el DOM est√© completamente cargado
document.addEventListener('DOMContentLoaded', function() {
    console.log("‚úÖ DOM Cargado - Iniciando SIBIA");
    
    // Inicializar sistemas en orden
    setTimeout(() => {
        console.log("üîÑ Inicializando sistemas...");
        
        // 1. Sistema de Gases Biodigestores
        if (typeof window.actualizarGasesBiodigestores === 'function') {
            console.log("üå¨Ô∏è Iniciando sistema de gases...");
            window.actualizarGasesBiodigestores();
        }
        
        // 2. Sistema de Flujo Volum√©trico
        if (typeof window.actualizarSistemaVolumetrico === 'function') {
            console.log("üíß Iniciando sistema volum√©trico...");
            window.actualizarSistemaVolumetrico();
        }
        
        // 3. Sistema de Reconexi√≥n Autom√°tica
        if (typeof window.iniciarSistemaReconexion === 'function') {
            console.log("üîå Iniciando sistema de reconexi√≥n...");
            window.iniciarSistemaReconexion();
        }
        
        // 4. Actualizar KPIs
        if (typeof window.actualizarKPIs === 'function') {
            console.log("üìä Actualizando KPIs...");
            window.actualizarKPIs();
        }
        
        // 5. Sistema de Energ√≠a
        if (typeof window.actualizarSistemaEnergiaCompleto === 'function') {
            console.log("‚ö° Actualizando sistema de energ√≠a...");
            window.actualizarSistemaEnergiaCompleto();
        }
        
        console.log("‚úÖ Todos los sistemas iniciados");
        
        // Configurar actualizaciones peri√≥dicas
        configurarActualizacionesPeriodicas();
        
    }, 2000); // Esperar 2 segundos para asegurar que todos los scripts est√©n cargados
});

// Configurar actualizaciones peri√≥dicas
function configurarActualizacionesPeriodicas() {
    console.log("‚è∞ Configurando actualizaciones peri√≥dicas...");
    
    // Actualizar gases cada 30 segundos
    setInterval(() => {
        if (typeof window.actualizarGasesBiodigestores === 'function') {
            window.actualizarGasesBiodigestores();
        }
    }, 30000);
    
    // Actualizar flujo volum√©trico cada 30 segundos
    setInterval(() => {
        if (typeof window.actualizarSistemaVolumetrico === 'function') {
            window.actualizarSistemaVolumetrico();
        }
    }, 30000);
    
    // Actualizar KPIs cada 60 segundos
    setInterval(() => {
        if (typeof window.actualizarKPIs === 'function') {
            window.actualizarKPIs();
        }
    }, 60000);
    
    console.log("‚úÖ Actualizaciones peri√≥dicas configuradas");
}

// Manejar errores globales
window.addEventListener('error', function(event) {
    console.error('‚ùå Error global:', event.error);
    console.error('   Archivo:', event.filename);
    console.error('   L√≠nea:', event.lineno);
    console.error('   Columna:', event.colno);
});

// Verificar que las pesta√±as est√©n funcionando
document.addEventListener('shown.bs.tab', function (event) {
    const tabId = event.target.getAttribute('id');
    console.log(`üìë Pesta√±a activada: ${tabId}`);
    
    // Actualizar contenido seg√∫n la pesta√±a
    switch(tabId) {
        case 'gases-biodigestores-tab':
            if (typeof window.actualizarGasesBiodigestores === 'function') {
                window.actualizarGasesBiodigestores();
            }
            break;
        case 'flujo-volumetrico-tab':
            if (typeof window.actualizarSistemaVolumetrico === 'function') {
                window.actualizarSistemaVolumetrico();
            }
            break;
        case 'kpis-tab':
            if (typeof window.actualizarKPIs === 'function') {
                window.actualizarKPIs();
            }
            break;
    }
});

console.log("‚úÖ Script de inicializaci√≥n cargado"); 